/*
TTX.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gottx

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the PortfolioSnapshotDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortfolioSnapshotDto{}

// PortfolioSnapshotDto struct for PortfolioSnapshotDto
type PortfolioSnapshotDto struct {
	PlayerId int32 `json:"player_id"`
	Value int64 `json:"value"`
	Time time.Time `json:"time"`
}

type _PortfolioSnapshotDto PortfolioSnapshotDto

// NewPortfolioSnapshotDto instantiates a new PortfolioSnapshotDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortfolioSnapshotDto(playerId int32, value int64, time time.Time) *PortfolioSnapshotDto {
	this := PortfolioSnapshotDto{}
	this.PlayerId = playerId
	this.Value = value
	this.Time = time
	return &this
}

// NewPortfolioSnapshotDtoWithDefaults instantiates a new PortfolioSnapshotDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortfolioSnapshotDtoWithDefaults() *PortfolioSnapshotDto {
	this := PortfolioSnapshotDto{}
	return &this
}

// GetPlayerId returns the PlayerId field value
func (o *PortfolioSnapshotDto) GetPlayerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PlayerId
}

// GetPlayerIdOk returns a tuple with the PlayerId field value
// and a boolean to check if the value has been set.
func (o *PortfolioSnapshotDto) GetPlayerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlayerId, true
}

// SetPlayerId sets field value
func (o *PortfolioSnapshotDto) SetPlayerId(v int32) {
	o.PlayerId = v
}

// GetValue returns the Value field value
func (o *PortfolioSnapshotDto) GetValue() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PortfolioSnapshotDto) GetValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *PortfolioSnapshotDto) SetValue(v int64) {
	o.Value = v
}

// GetTime returns the Time field value
func (o *PortfolioSnapshotDto) GetTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *PortfolioSnapshotDto) GetTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *PortfolioSnapshotDto) SetTime(v time.Time) {
	o.Time = v
}

func (o PortfolioSnapshotDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortfolioSnapshotDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["player_id"] = o.PlayerId
	toSerialize["value"] = o.Value
	toSerialize["time"] = o.Time
	return toSerialize, nil
}

func (o *PortfolioSnapshotDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"player_id",
		"value",
		"time",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPortfolioSnapshotDto := _PortfolioSnapshotDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPortfolioSnapshotDto)

	if err != nil {
		return err
	}

	*o = PortfolioSnapshotDto(varPortfolioSnapshotDto)

	return err
}

type NullablePortfolioSnapshotDto struct {
	value *PortfolioSnapshotDto
	isSet bool
}

func (v NullablePortfolioSnapshotDto) Get() *PortfolioSnapshotDto {
	return v.value
}

func (v *NullablePortfolioSnapshotDto) Set(val *PortfolioSnapshotDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePortfolioSnapshotDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePortfolioSnapshotDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortfolioSnapshotDto(val *PortfolioSnapshotDto) *NullablePortfolioSnapshotDto {
	return &NullablePortfolioSnapshotDto{value: val, isSet: true}
}

func (v NullablePortfolioSnapshotDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortfolioSnapshotDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
TTX.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gottx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreatorShareDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatorShareDto{}

// CreatorShareDto struct for CreatorShareDto
type CreatorShareDto struct {
	Player PlayerPartialDto `json:"player"`
	Quantity int32 `json:"quantity"`
}

type _CreatorShareDto CreatorShareDto

// NewCreatorShareDto instantiates a new CreatorShareDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatorShareDto(player PlayerPartialDto, quantity int32) *CreatorShareDto {
	this := CreatorShareDto{}
	this.Player = player
	this.Quantity = quantity
	return &this
}

// NewCreatorShareDtoWithDefaults instantiates a new CreatorShareDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatorShareDtoWithDefaults() *CreatorShareDto {
	this := CreatorShareDto{}
	return &this
}

// GetPlayer returns the Player field value
func (o *CreatorShareDto) GetPlayer() PlayerPartialDto {
	if o == nil {
		var ret PlayerPartialDto
		return ret
	}

	return o.Player
}

// GetPlayerOk returns a tuple with the Player field value
// and a boolean to check if the value has been set.
func (o *CreatorShareDto) GetPlayerOk() (*PlayerPartialDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Player, true
}

// SetPlayer sets field value
func (o *CreatorShareDto) SetPlayer(v PlayerPartialDto) {
	o.Player = v
}

// GetQuantity returns the Quantity field value
func (o *CreatorShareDto) GetQuantity() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *CreatorShareDto) GetQuantityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *CreatorShareDto) SetQuantity(v int32) {
	o.Quantity = v
}

func (o CreatorShareDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatorShareDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["player"] = o.Player
	toSerialize["quantity"] = o.Quantity
	return toSerialize, nil
}

func (o *CreatorShareDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"player",
		"quantity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatorShareDto := _CreatorShareDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreatorShareDto)

	if err != nil {
		return err
	}

	*o = CreatorShareDto(varCreatorShareDto)

	return err
}

type NullableCreatorShareDto struct {
	value *CreatorShareDto
	isSet bool
}

func (v NullableCreatorShareDto) Get() *CreatorShareDto {
	return v.value
}

func (v *NullableCreatorShareDto) Set(val *CreatorShareDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatorShareDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatorShareDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatorShareDto(val *CreatorShareDto) *NullableCreatorShareDto {
	return &NullableCreatorShareDto{value: val, isSet: true}
}

func (v NullableCreatorShareDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatorShareDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



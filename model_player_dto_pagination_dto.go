/*
TTX.Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gottx

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PlayerDtoPaginationDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlayerDtoPaginationDto{}

// PlayerDtoPaginationDto struct for PlayerDtoPaginationDto
type PlayerDtoPaginationDto struct {
	Data []PlayerDto `json:"data"`
	Total int32 `json:"total"`
}

type _PlayerDtoPaginationDto PlayerDtoPaginationDto

// NewPlayerDtoPaginationDto instantiates a new PlayerDtoPaginationDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlayerDtoPaginationDto(data []PlayerDto, total int32) *PlayerDtoPaginationDto {
	this := PlayerDtoPaginationDto{}
	this.Data = data
	this.Total = total
	return &this
}

// NewPlayerDtoPaginationDtoWithDefaults instantiates a new PlayerDtoPaginationDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlayerDtoPaginationDtoWithDefaults() *PlayerDtoPaginationDto {
	this := PlayerDtoPaginationDto{}
	return &this
}

// GetData returns the Data field value
func (o *PlayerDtoPaginationDto) GetData() []PlayerDto {
	if o == nil {
		var ret []PlayerDto
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *PlayerDtoPaginationDto) GetDataOk() ([]PlayerDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *PlayerDtoPaginationDto) SetData(v []PlayerDto) {
	o.Data = v
}

// GetTotal returns the Total field value
func (o *PlayerDtoPaginationDto) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *PlayerDtoPaginationDto) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *PlayerDtoPaginationDto) SetTotal(v int32) {
	o.Total = v
}

func (o PlayerDtoPaginationDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlayerDtoPaginationDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

func (o *PlayerDtoPaginationDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPlayerDtoPaginationDto := _PlayerDtoPaginationDto{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPlayerDtoPaginationDto)

	if err != nil {
		return err
	}

	*o = PlayerDtoPaginationDto(varPlayerDtoPaginationDto)

	return err
}

type NullablePlayerDtoPaginationDto struct {
	value *PlayerDtoPaginationDto
	isSet bool
}

func (v NullablePlayerDtoPaginationDto) Get() *PlayerDtoPaginationDto {
	return v.value
}

func (v *NullablePlayerDtoPaginationDto) Set(val *PlayerDtoPaginationDto) {
	v.value = val
	v.isSet = true
}

func (v NullablePlayerDtoPaginationDto) IsSet() bool {
	return v.isSet
}

func (v *NullablePlayerDtoPaginationDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlayerDtoPaginationDto(val *PlayerDtoPaginationDto) *NullablePlayerDtoPaginationDto {
	return &NullablePlayerDtoPaginationDto{value: val, isSet: true}
}

func (v NullablePlayerDtoPaginationDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlayerDtoPaginationDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


